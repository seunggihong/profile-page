{"ast":null,"code":"import _slicedToArray from\"/Users/ki/Desktop/project/profile-page/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{motion}from\"framer-motion\";import{useEffect,useState}from\"react\";import Gitrepo from\"../utils/Gitrepo\";import axios from\"axios\";import\"../css/ProjectPage.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function importData(url,setDatas){axios.get(url).then(function(response){var newDatas=[];for(var i=0;i<response.data.length;i++){var newData={id:response.data[i].id,name:response.data[i].name,url:response.data[i].html_url};newDatas.push(newData);}setDatas(newDatas);});}function ProjectPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),datas=_useState2[0],setDatas=_useState2[1];var url=\"https://api.github.com/users/seunggihong/repos\";useEffect(function(){importData(url,setDatas);return datas;},[]);var gitrepoCreate=datas.map(function(datas,index){return/*#__PURE__*/_jsx(Gitrepo,{id:datas.id,name:datas.name,htmlUrl:datas.url},index);});return/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0},animate:{opacity:1},transition:{duration:2},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"GitHub Repositories\"}),/*#__PURE__*/_jsx(\"div\",{className:\"project_frame\",children:/*#__PURE__*/_jsx(\"div\",{className:\"project_frame_div\",children:gitrepoCreate})})]});}export default ProjectPage;","map":{"version":3,"sources":["/Users/ki/Desktop/project/profile-page/client/src/pages/ProjectPage.js"],"names":["motion","useEffect","useState","Gitrepo","axios","importData","url","setDatas","get","then","response","newDatas","i","data","length","newData","id","name","html_url","push","ProjectPage","datas","gitrepoCreate","map","index","opacity","duration"],"mappings":"mIAAA,OAASA,MAAT,KAAuB,eAAvB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,wBAAP,C,wFAEA,QAASC,CAAAA,UAAT,CAAoBC,GAApB,CAAyBC,QAAzB,CAAmC,CACjCH,KAAK,CAACI,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoB,SAACC,QAAD,CAAc,CAChC,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,QAAQ,CAACG,IAAT,CAAcC,MAAlC,CAA0CF,CAAC,EAA3C,CAA+C,CAC7C,GAAMG,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEN,QAAQ,CAACG,IAAT,CAAcD,CAAd,EAAiBI,EADP,CAEdC,IAAI,CAAEP,QAAQ,CAACG,IAAT,CAAcD,CAAd,EAAiBK,IAFT,CAGdX,GAAG,CAAEI,QAAQ,CAACG,IAAT,CAAcD,CAAd,EAAiBM,QAHR,CAAhB,CAKAP,QAAQ,CAACQ,IAAT,CAAcJ,OAAd,EACD,CACDR,QAAQ,CAACI,QAAD,CAAR,CACD,CAXD,EAYD,CAED,QAASS,CAAAA,WAAT,EAAuB,CACrB,cAA0BlB,QAAQ,CAAC,EAAD,CAAlC,wCAAOmB,KAAP,eAAcd,QAAd,eACA,GAAMD,CAAAA,GAAG,CAAG,gDAAZ,CAEAL,SAAS,CAAC,UAAM,CACdI,UAAU,CAACC,GAAD,CAAMC,QAAN,CAAV,CACA,MAAOc,CAAAA,KAAP,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMC,CAAAA,aAAa,CAAGD,KAAK,CAACE,GAAN,CAAU,SAACF,KAAD,CAAQG,KAAR,qBAC9B,KAAC,OAAD,EAAS,EAAE,CAAEH,KAAK,CAACL,EAAnB,CAAuB,IAAI,CAAEK,KAAK,CAACJ,IAAnC,CAAyC,OAAO,CAAEI,KAAK,CAACf,GAAxD,EAAkEkB,KAAlE,CAD8B,EAAV,CAAtB,CAIA,mBACE,MAAC,MAAD,CAAQ,GAAR,EACE,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAX,CADX,CAEE,OAAO,CAAE,CAAEA,OAAO,CAAE,CAAX,CAFX,CAGE,UAAU,CAAE,CAAEC,QAAQ,CAAE,CAAZ,CAHd,wBAKE,2CALF,cAME,YAAK,SAAS,CAAC,eAAf,uBACE,YAAK,SAAS,CAAC,mBAAf,UAAoCJ,aAApC,EADF,EANF,GADF,CAYD,CACD,cAAeF,CAAAA,WAAf","sourcesContent":["import { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport Gitrepo from \"../utils/Gitrepo\";\nimport axios from \"axios\";\nimport \"../css/ProjectPage.css\";\n\nfunction importData(url, setDatas) {\n  axios.get(url).then((response) => {\n    var newDatas = [];\n    for (var i = 0; i < response.data.length; i++) {\n      const newData = {\n        id: response.data[i].id,\n        name: response.data[i].name,\n        url: response.data[i].html_url,\n      };\n      newDatas.push(newData);\n    }\n    setDatas(newDatas);\n  });\n}\n\nfunction ProjectPage() {\n  const [datas, setDatas] = useState([]);\n  const url = \"https://api.github.com/users/seunggihong/repos\";\n\n  useEffect(() => {\n    importData(url, setDatas);\n    return datas;\n  }, []);\n\n  const gitrepoCreate = datas.map((datas, index) => (\n    <Gitrepo id={datas.id} name={datas.name} htmlUrl={datas.url} key={index} />\n  ));\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 2 }}\n    >\n      <h1>GitHub Repositories</h1>\n      <div className=\"project_frame\">\n        <div className=\"project_frame_div\">{gitrepoCreate}</div>\n      </div>\n    </motion.div>\n  );\n}\nexport default ProjectPage;\n"]},"metadata":{},"sourceType":"module"}